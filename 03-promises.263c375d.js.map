{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAE9B,SAA0BC,GACxBA,EAAEC,iBAEF,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAOG,MAAOD,GAAK,EAAG,CACzC,IAAIE,EAAYnB,EAAMkB,MAAQJ,EAAKI,MAAQD,EAG3CnB,EAFsBmB,EAAI,EAEKE,GAC5BC,MAAK,EAACC,gBAAEA,EAAeC,UAAEA,MACxBC,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBJ,QAAwBC,OAAe,IAG/DI,OAAM,EAACL,gBAAEA,EAAeC,UAAEA,MACzBC,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBN,QAAsBC,OAAe,G,CAIjEX,EAAEK,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitFormEl = document.querySelector('.form');\n\nsubmitFormEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  for (let i = 0; i <= amount.value; i += 1) {\n    let delayTime = delay.value + step.value * i;\n    let positionPromise = i + 1;\n\n    createPromise(positionPromise, delayTime)\n      .then(({ positionPromise, delayTime }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${positionPromise} in ${delayTime} ms`\n        );\n      })\n      .catch(({ positionPromise, delayTime }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${positionPromise} in ${delayTime} ms`\n        );\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","i","value","delayTime1","then","positionPromise","delayTime","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.263c375d.js.map"}