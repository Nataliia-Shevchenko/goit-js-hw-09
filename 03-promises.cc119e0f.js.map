{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAcC,SAASC,cAAc,UACtBD,SAASC,cAAc,uBAQ5C,SAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAN7BP,EAAYQ,iBAAiB,SAAUC,IACrCN,GAAe,IAcjBA,IACGO,MAAK,EAACN,SAAEA,EAAQC,MAAEA,MACjBM,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBT,QAAiBC,MAAU,IAEzES,OAAM,EAACV,SAAEA,EAAQC,MAAEA,MAClBM,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBX,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\nconst submitBtnEl = document.querySelector('button');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\n\n\nsubmitBtnEl.addEventListener('click', (e) =>{\n  createPromise();\n\n})\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitBtnEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Math","random","addEventListener","e","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cc119e0f.js.map"}