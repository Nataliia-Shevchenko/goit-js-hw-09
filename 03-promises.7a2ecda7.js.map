{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAxCcQ,SAASC,cAAc,SAE/BC,iBAAiB,UAE9B,SAA0BC,GACxBA,EAAEC,iBAMF,IAJA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYf,EAAKa,EAALb,MAAOgB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGlBC,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,GAAK,EAAG,CACzC,IAAIE,EAAYpB,EAAMmB,MAAQH,EAAKG,MAAQD,EAG3CpB,EAFsBoB,EAAI,EAEKE,GAC5BC,MAAK,SAAAC,G,IAAGC,EAAeD,EAAfC,gBAAiBC,EAASF,EAATE,UACxBC,EAAA7B,GAAS8B,OAAOC,QACd,uBAA+CC,OAAtBL,EAAgB,QAAgBK,OAAVJ,EAAU,O,IAG5DK,OAAM,SAAAP,G,IAAGC,EAAeD,EAAfC,gBAAiBC,EAASF,EAATE,UACzBC,EAAA7B,GAAS8B,OAAOI,QACd,sBAA4CF,OAAtBL,EAAgB,QAAgBK,OAAVJ,EAAU,O,IAI9Db,EAAEG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitFormEl = document.querySelector('.form');\n\nsubmitFormEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  for (let i = 0; i <= amount.value; i += 1) {\n    let delayTime = delay.value + step.value * i;\n    let positionPromise = i + 1;\n\n    createPromise(positionPromise, delayTime)\n      .then(({ positionPromise, delayTime }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${positionPromise} in ${delayTime} ms`\n        );\n      })\n      .catch(({ positionPromise, delayTime }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${positionPromise} in ${delayTime} ms`\n        );\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","i","value","delayTime1","then","param","positionPromise","delayTime","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.7a2ecda7.js.map"}